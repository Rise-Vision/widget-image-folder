(function(){function n(n){function e(e,t,r,i,o,u){for(;o>=0&&u>o;o+=n){var a=i?i[o]:o;r=t(r,e[a],a,e)}return r}return function(t,r,i,o){r=b(r,o,4);var u=!x(t)&&y.keys(t),a=(u||t).length,s=n>0?0:a-1;return arguments.length<3&&(i=t[u?u[s]:s],s+=n),e(t,r,i,u,s,a)}}function e(n){return function(e,t,r){t=w(t,r);for(var i=S(e),o=n>0?0:i-1;o>=0&&i>o;o+=n)if(t(e[o],o,e))return o;return-1}}function t(n,e,t){return function(r,i,o){var u=0,a=S(r);if("number"==typeof o)n>0?u=o>=0?o:Math.max(o+a,u):a=o>=0?Math.min(o+1,a):o+a+1;else if(t&&o&&a)return o=t(r,i),r[o]===i?o:-1;if(i!==i)return o=e(c.call(r,u,a),y.isNaN),o>=0?o+u:-1;for(o=n>0?u:a-1;o>=0&&a>o;o+=n)if(r[o]===i)return o;return-1}}function r(n,e){var t=k.length,r=n.constructor,i=y.isFunction(r)&&r.prototype||a,o="constructor";for(y.has(n,o)&&!y.contains(e,o)&&e.push(o);t--;)o=k[t],o in n&&n[o]!==i[o]&&!y.contains(e,o)&&e.push(o)}var i=this,o=i._,u=Array.prototype,a=Object.prototype,s=Function.prototype,l=u.push,c=u.slice,f=a.toString,d=a.hasOwnProperty,p=Array.isArray,g=Object.keys,m=s.bind,h=Object.create,v=function(){},y=function(n){return n instanceof y?n:this instanceof y?void(this._wrapped=n):new y(n)};"undefined"!=typeof exports?("undefined"!=typeof module&&module.exports&&(exports=module.exports=y),exports._=y):i._=y,y.VERSION="1.8.3";var b=function(n,e,t){if(void 0===e)return n;switch(null==t?3:t){case 1:return function(t){return n.call(e,t)};case 2:return function(t,r){return n.call(e,t,r)};case 3:return function(t,r,i){return n.call(e,t,r,i)};case 4:return function(t,r,i,o){return n.call(e,t,r,i,o)}}return function(){return n.apply(e,arguments)}},w=function(n,e,t){return null==n?y.identity:y.isFunction(n)?b(n,e,t):y.isObject(n)?y.matcher(n):y.property(n)};y.iteratee=function(n,e){return w(n,e,1/0)};var _=function(n,e){return function(t){var r=arguments.length;if(2>r||null==t)return t;for(var i=1;r>i;i++)for(var o=arguments[i],u=n(o),a=u.length,s=0;a>s;s++){var l=u[s];e&&void 0!==t[l]||(t[l]=o[l])}return t}},R=function(n){if(!y.isObject(n))return{};if(h)return h(n);v.prototype=n;var e=new v;return v.prototype=null,e},I=function(n){return function(e){return null==e?void 0:e[n]}},F=Math.pow(2,53)-1,S=I("length"),x=function(n){var e=S(n);return"number"==typeof e&&e>=0&&F>=e};y.each=y.forEach=function(n,e,t){e=b(e,t);var r,i;if(x(n))for(r=0,i=n.length;i>r;r++)e(n[r],r,n);else{var o=y.keys(n);for(r=0,i=o.length;i>r;r++)e(n[o[r]],o[r],n)}return n},y.map=y.collect=function(n,e,t){e=w(e,t);for(var r=!x(n)&&y.keys(n),i=(r||n).length,o=Array(i),u=0;i>u;u++){var a=r?r[u]:u;o[u]=e(n[a],a,n)}return o},y.reduce=y.foldl=y.inject=n(1),y.reduceRight=y.foldr=n(-1),y.find=y.detect=function(n,e,t){var r;return r=x(n)?y.findIndex(n,e,t):y.findKey(n,e,t),void 0!==r&&-1!==r?n[r]:void 0},y.filter=y.select=function(n,e,t){var r=[];return e=w(e,t),y.each(n,function(n,t,i){e(n,t,i)&&r.push(n)}),r},y.reject=function(n,e,t){return y.filter(n,y.negate(w(e)),t)},y.every=y.all=function(n,e,t){e=w(e,t);for(var r=!x(n)&&y.keys(n),i=(r||n).length,o=0;i>o;o++){var u=r?r[o]:o;if(!e(n[u],u,n))return!1}return!0},y.some=y.any=function(n,e,t){e=w(e,t);for(var r=!x(n)&&y.keys(n),i=(r||n).length,o=0;i>o;o++){var u=r?r[o]:o;if(e(n[u],u,n))return!0}return!1},y.contains=y.includes=y.include=function(n,e,t,r){return x(n)||(n=y.values(n)),("number"!=typeof t||r)&&(t=0),y.indexOf(n,e,t)>=0},y.invoke=function(n,e){var t=c.call(arguments,2),r=y.isFunction(e);return y.map(n,function(n){var i=r?e:n[e];return null==i?i:i.apply(n,t)})},y.pluck=function(n,e){return y.map(n,y.property(e))},y.where=function(n,e){return y.filter(n,y.matcher(e))},y.findWhere=function(n,e){return y.find(n,y.matcher(e))},y.max=function(n,e,t){var r,i,o=-1/0,u=-1/0;if(null==e&&null!=n){n=x(n)?n:y.values(n);for(var a=0,s=n.length;s>a;a++)r=n[a],r>o&&(o=r)}else e=w(e,t),y.each(n,function(n,t,r){i=e(n,t,r),(i>u||i===-1/0&&o===-1/0)&&(o=n,u=i)});return o},y.min=function(n,e,t){var r,i,o=1/0,u=1/0;if(null==e&&null!=n){n=x(n)?n:y.values(n);for(var a=0,s=n.length;s>a;a++)r=n[a],o>r&&(o=r)}else e=w(e,t),y.each(n,function(n,t,r){i=e(n,t,r),(u>i||1/0===i&&1/0===o)&&(o=n,u=i)});return o},y.shuffle=function(n){for(var e,t=x(n)?n:y.values(n),r=t.length,i=Array(r),o=0;r>o;o++)e=y.random(0,o),e!==o&&(i[o]=i[e]),i[e]=t[o];return i},y.sample=function(n,e,t){return null==e||t?(x(n)||(n=y.values(n)),n[y.random(n.length-1)]):y.shuffle(n).slice(0,Math.max(0,e))},y.sortBy=function(n,e,t){return e=w(e,t),y.pluck(y.map(n,function(n,t,r){return{value:n,index:t,criteria:e(n,t,r)}}).sort(function(n,e){var t=n.criteria,r=e.criteria;if(t!==r){if(t>r||void 0===t)return 1;if(r>t||void 0===r)return-1}return n.index-e.index}),"value")};var A=function(n){return function(e,t,r){var i={};return t=w(t,r),y.each(e,function(r,o){var u=t(r,o,e);n(i,r,u)}),i}};y.groupBy=A(function(n,e,t){y.has(n,t)?n[t].push(e):n[t]=[e]}),y.indexBy=A(function(n,e,t){n[t]=e}),y.countBy=A(function(n,e,t){y.has(n,t)?n[t]++:n[t]=1}),y.toArray=function(n){return n?y.isArray(n)?c.call(n):x(n)?y.map(n,y.identity):y.values(n):[]},y.size=function(n){return null==n?0:x(n)?n.length:y.keys(n).length},y.partition=function(n,e,t){e=w(e,t);var r=[],i=[];return y.each(n,function(n,t,o){(e(n,t,o)?r:i).push(n)}),[r,i]},y.first=y.head=y.take=function(n,e,t){return null==n?void 0:null==e||t?n[0]:y.initial(n,n.length-e)},y.initial=function(n,e,t){return c.call(n,0,Math.max(0,n.length-(null==e||t?1:e)))},y.last=function(n,e,t){return null==n?void 0:null==e||t?n[n.length-1]:y.rest(n,Math.max(0,n.length-e))},y.rest=y.tail=y.drop=function(n,e,t){return c.call(n,null==e||t?1:e)},y.compact=function(n){return y.filter(n,y.identity)};var E=function(n,e,t,r){for(var i=[],o=0,u=r||0,a=S(n);a>u;u++){var s=n[u];if(x(s)&&(y.isArray(s)||y.isArguments(s))){e||(s=E(s,e,t));var l=0,c=s.length;for(i.length+=c;c>l;)i[o++]=s[l++]}else t||(i[o++]=s)}return i};y.flatten=function(n,e){return E(n,e,!1)},y.without=function(n){return y.difference(n,c.call(arguments,1))},y.uniq=y.unique=function(n,e,t,r){y.isBoolean(e)||(r=t,t=e,e=!1),null!=t&&(t=w(t,r));for(var i=[],o=[],u=0,a=S(n);a>u;u++){var s=n[u],l=t?t(s,u,n):s;e?(u&&o===l||i.push(s),o=l):t?y.contains(o,l)||(o.push(l),i.push(s)):y.contains(i,s)||i.push(s)}return i},y.union=function(){return y.uniq(E(arguments,!0,!0))},y.intersection=function(n){for(var e=[],t=arguments.length,r=0,i=S(n);i>r;r++){var o=n[r];if(!y.contains(e,o)){for(var u=1;t>u&&y.contains(arguments[u],o);u++);u===t&&e.push(o)}}return e},y.difference=function(n){var e=E(arguments,!0,!0,1);return y.filter(n,function(n){return!y.contains(e,n)})},y.zip=function(){return y.unzip(arguments)},y.unzip=function(n){for(var e=n&&y.max(n,S).length||0,t=Array(e),r=0;e>r;r++)t[r]=y.pluck(n,r);return t},y.object=function(n,e){for(var t={},r=0,i=S(n);i>r;r++)e?t[n[r]]=e[r]:t[n[r][0]]=n[r][1];return t},y.findIndex=e(1),y.findLastIndex=e(-1),y.sortedIndex=function(n,e,t,r){t=w(t,r,1);for(var i=t(e),o=0,u=S(n);u>o;){var a=Math.floor((o+u)/2);t(n[a])<i?o=a+1:u=a}return o},y.indexOf=t(1,y.findIndex,y.sortedIndex),y.lastIndexOf=t(-1,y.findLastIndex),y.range=function(n,e,t){null==e&&(e=n||0,n=0),t=t||1;for(var r=Math.max(Math.ceil((e-n)/t),0),i=Array(r),o=0;r>o;o++,n+=t)i[o]=n;return i};var j=function(n,e,t,r,i){if(!(r instanceof e))return n.apply(t,i);var o=R(n.prototype),u=n.apply(o,i);return y.isObject(u)?u:o};y.bind=function(n,e){if(m&&n.bind===m)return m.apply(n,c.call(arguments,1));if(!y.isFunction(n))throw new TypeError("Bind must be called on a function");var t=c.call(arguments,2),r=function(){return j(n,r,e,this,t.concat(c.call(arguments)))};return r},y.partial=function(n){var e=c.call(arguments,1),t=function(){for(var r=0,i=e.length,o=Array(i),u=0;i>u;u++)o[u]=e[u]===y?arguments[r++]:e[u];for(;r<arguments.length;)o.push(arguments[r++]);return j(n,t,this,this,o)};return t},y.bindAll=function(n){var e,t,r=arguments.length;if(1>=r)throw new Error("bindAll must be passed function names");for(e=1;r>e;e++)t=arguments[e],n[t]=y.bind(n[t],n);return n},y.memoize=function(n,e){var t=function(r){var i=t.cache,o=""+(e?e.apply(this,arguments):r);return y.has(i,o)||(i[o]=n.apply(this,arguments)),i[o]};return t.cache={},t},y.delay=function(n,e){var t=c.call(arguments,2);return setTimeout(function(){return n.apply(null,t)},e)},y.defer=y.partial(y.delay,y,1),y.throttle=function(n,e,t){var r,i,o,u=null,a=0;t||(t={});var s=function(){a=t.leading===!1?0:y.now(),u=null,o=n.apply(r,i),u||(r=i=null)};return function(){var l=y.now();a||t.leading!==!1||(a=l);var c=e-(l-a);return r=this,i=arguments,0>=c||c>e?(u&&(clearTimeout(u),u=null),a=l,o=n.apply(r,i),u||(r=i=null)):u||t.trailing===!1||(u=setTimeout(s,c)),o}},y.debounce=function(n,e,t){var r,i,o,u,a,s=function(){var l=y.now()-u;e>l&&l>=0?r=setTimeout(s,e-l):(r=null,t||(a=n.apply(o,i),r||(o=i=null)))};return function(){o=this,i=arguments,u=y.now();var l=t&&!r;return r||(r=setTimeout(s,e)),l&&(a=n.apply(o,i),o=i=null),a}},y.wrap=function(n,e){return y.partial(e,n)},y.negate=function(n){return function(){return!n.apply(this,arguments)}},y.compose=function(){var n=arguments,e=n.length-1;return function(){for(var t=e,r=n[e].apply(this,arguments);t--;)r=n[t].call(this,r);return r}},y.after=function(n,e){return function(){return--n<1?e.apply(this,arguments):void 0}},y.before=function(n,e){var t;return function(){return--n>0&&(t=e.apply(this,arguments)),1>=n&&(e=null),t}},y.once=y.partial(y.before,2);var V=!{toString:null}.propertyIsEnumerable("toString"),k=["valueOf","isPrototypeOf","toString","propertyIsEnumerable","hasOwnProperty","toLocaleString"];y.keys=function(n){if(!y.isObject(n))return[];if(g)return g(n);var e=[];for(var t in n)y.has(n,t)&&e.push(t);return V&&r(n,e),e},y.allKeys=function(n){if(!y.isObject(n))return[];var e=[];for(var t in n)e.push(t);return V&&r(n,e),e},y.values=function(n){for(var e=y.keys(n),t=e.length,r=Array(t),i=0;t>i;i++)r[i]=n[e[i]];return r},y.mapObject=function(n,e,t){e=w(e,t);for(var r,i=y.keys(n),o=i.length,u={},a=0;o>a;a++)r=i[a],u[r]=e(n[r],r,n);return u},y.pairs=function(n){for(var e=y.keys(n),t=e.length,r=Array(t),i=0;t>i;i++)r[i]=[e[i],n[e[i]]];return r},y.invert=function(n){for(var e={},t=y.keys(n),r=0,i=t.length;i>r;r++)e[n[t[r]]]=t[r];return e},y.functions=y.methods=function(n){var e=[];for(var t in n)y.isFunction(n[t])&&e.push(t);return e.sort()},y.extend=_(y.allKeys),y.extendOwn=y.assign=_(y.keys),y.findKey=function(n,e,t){e=w(e,t);for(var r,i=y.keys(n),o=0,u=i.length;u>o;o++)if(r=i[o],e(n[r],r,n))return r},y.pick=function(n,e,t){var r,i,o={},u=n;if(null==u)return o;y.isFunction(e)?(i=y.allKeys(u),r=b(e,t)):(i=E(arguments,!1,!1,1),r=function(n,e,t){return e in t},u=Object(u));for(var a=0,s=i.length;s>a;a++){var l=i[a],c=u[l];r(c,l,u)&&(o[l]=c)}return o},y.omit=function(n,e,t){if(y.isFunction(e))e=y.negate(e);else{var r=y.map(E(arguments,!1,!1,1),String);e=function(n,e){return!y.contains(r,e)}}return y.pick(n,e,t)},y.defaults=_(y.allKeys,!0),y.create=function(n,e){var t=R(n);return e&&y.extendOwn(t,e),t},y.clone=function(n){return y.isObject(n)?y.isArray(n)?n.slice():y.extend({},n):n},y.tap=function(n,e){return e(n),n},y.isMatch=function(n,e){var t=y.keys(e),r=t.length;if(null==n)return!r;for(var i=Object(n),o=0;r>o;o++){var u=t[o];if(e[u]!==i[u]||!(u in i))return!1}return!0};var O=function(n,e,t,r){if(n===e)return 0!==n||1/n===1/e;if(null==n||null==e)return n===e;n instanceof y&&(n=n._wrapped),e instanceof y&&(e=e._wrapped);var i=f.call(n);if(i!==f.call(e))return!1;switch(i){case"[object RegExp]":case"[object String]":return""+n==""+e;case"[object Number]":return+n!==+n?+e!==+e:0===+n?1/+n===1/e:+n===+e;case"[object Date]":case"[object Boolean]":return+n===+e}var o="[object Array]"===i;if(!o){if("object"!=typeof n||"object"!=typeof e)return!1;var u=n.constructor,a=e.constructor;if(u!==a&&!(y.isFunction(u)&&u instanceof u&&y.isFunction(a)&&a instanceof a)&&"constructor"in n&&"constructor"in e)return!1}t=t||[],r=r||[];for(var s=t.length;s--;)if(t[s]===n)return r[s]===e;if(t.push(n),r.push(e),o){if(s=n.length,s!==e.length)return!1;for(;s--;)if(!O(n[s],e[s],t,r))return!1}else{var l,c=y.keys(n);if(s=c.length,y.keys(e).length!==s)return!1;for(;s--;)if(l=c[s],!y.has(e,l)||!O(n[l],e[l],t,r))return!1}return t.pop(),r.pop(),!0};y.isEqual=function(n,e){return O(n,e)},y.isEmpty=function(n){return null==n?!0:x(n)&&(y.isArray(n)||y.isString(n)||y.isArguments(n))?0===n.length:0===y.keys(n).length},y.isElement=function(n){return!(!n||1!==n.nodeType)},y.isArray=p||function(n){return"[object Array]"===f.call(n)},y.isObject=function(n){var e=typeof n;return"function"===e||"object"===e&&!!n},y.each(["Arguments","Function","String","Number","Date","RegExp","Error"],function(n){y["is"+n]=function(e){return f.call(e)==="[object "+n+"]"}}),y.isArguments(arguments)||(y.isArguments=function(n){return y.has(n,"callee")}),"function"!=typeof/./&&"object"!=typeof Int8Array&&(y.isFunction=function(n){return"function"==typeof n||!1}),y.isFinite=function(n){return isFinite(n)&&!isNaN(parseFloat(n))},y.isNaN=function(n){return y.isNumber(n)&&n!==+n},y.isBoolean=function(n){return n===!0||n===!1||"[object Boolean]"===f.call(n)},y.isNull=function(n){return null===n},y.isUndefined=function(n){return void 0===n},y.has=function(n,e){return null!=n&&d.call(n,e)},y.noConflict=function(){return i._=o,this},y.identity=function(n){return n},y.constant=function(n){return function(){return n}},y.noop=function(){},y.property=I,y.propertyOf=function(n){return null==n?function(){}:function(e){return n[e]}},y.matcher=y.matches=function(n){return n=y.extendOwn({},n),function(e){return y.isMatch(e,n)}},y.times=function(n,e,t){var r=Array(Math.max(0,n));e=b(e,t,1);for(var i=0;n>i;i++)r[i]=e(i);return r},y.random=function(n,e){return null==e&&(e=n,n=0),n+Math.floor(Math.random()*(e-n+1))},y.now=Date.now||function(){return(new Date).getTime()};var C={"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#x27;","`":"&#x60;"},T=y.invert(C),B=function(n){var e=function(e){return n[e]},t="(?:"+y.keys(n).join("|")+")",r=RegExp(t),i=RegExp(t,"g");return function(n){return n=null==n?"":""+n,r.test(n)?n.replace(i,e):n}};y.escape=B(C),y.unescape=B(T),y.result=function(n,e,t){var r=null==n?void 0:n[e];return void 0===r&&(r=t),y.isFunction(r)?r.call(n):r};var N=0;y.uniqueId=function(n){var e=++N+"";return n?n+e:e},y.templateSettings={evaluate:/<%([\s\S]+?)%>/g,interpolate:/<%=([\s\S]+?)%>/g,escape:/<%-([\s\S]+?)%>/g};var M=/(.)^/,P={"'":"'","\\":"\\","\r":"r","\n":"n","\u2028":"u2028","\u2029":"u2029"},q=/\\|'|\r|\n|\u2028|\u2029/g,L=function(n){return"\\"+P[n]};y.template=function(n,e,t){!e&&t&&(e=t),e=y.defaults({},e,y.templateSettings);var r=RegExp([(e.escape||M).source,(e.interpolate||M).source,(e.evaluate||M).source].join("|")+"|$","g"),i=0,o="__p+='";n.replace(r,function(e,t,r,u,a){return o+=n.slice(i,a).replace(q,L),i=a+e.length,t?o+="'+\n((__t=("+t+"))==null?'':_.escape(__t))+\n'":r?o+="'+\n((__t=("+r+"))==null?'':__t)+\n'":u&&(o+="';\n"+u+"\n__p+='"),e}),o+="';\n",e.variable||(o="with(obj||{}){\n"+o+"}\n"),o="var __t,__p='',__j=Array.prototype.join,print=function(){__p+=__j.call(arguments,'');};\n"+o+"return __p;\n";try{var u=new Function(e.variable||"obj","_",o)}catch(a){throw a.source=o,a}var s=function(n){return u.call(this,n,y)},l=e.variable||"obj";return s.source="function("+l+"){\n"+o+"}",s},y.chain=function(n){var e=y(n);return e._chain=!0,e};var H=function(n,e){return n._chain?y(e).chain():e};y.mixin=function(n){y.each(y.functions(n),function(e){var t=y[e]=n[e];y.prototype[e]=function(){var n=[this._wrapped];return l.apply(n,arguments),H(this,t.apply(y,n))}})},y.mixin(y),y.each(["pop","push","reverse","shift","sort","splice","unshift"],function(n){var e=u[n];y.prototype[n]=function(){var t=this._wrapped;return e.apply(t,arguments),"shift"!==n&&"splice"!==n||0!==t.length||delete t[0],H(this,t)}}),y.each(["concat","join","slice"],function(n){var e=u[n];y.prototype[n]=function(){return H(this,e.apply(this._wrapped,arguments))}}),y.prototype.value=function(){return this._wrapped},y.prototype.valueOf=y.prototype.toJSON=y.prototype.value,y.prototype.toString=function(){return""+this._wrapped},"function"==typeof define&&define.amd&&define("underscore",[],function(){return y})}).call(this);var RiseVision=RiseVision||{};if(RiseVision.Common=RiseVision.Common||{},RiseVision.Common.Utilities=function(){function n(n,e){var t="font-family:"+e.font.family+"; ",r="color: "+e.color+"; ",i="font-size: "+e.size+"px; ",o="font-weight: "+(e.bold?"bold":"normal")+"; ",u="font-style: "+(e.italic?"italic":"normal")+"; ",a="text-decoration: "+(e.underline?"underline":"none")+"; ",s="background-color: "+e.highlightColor+"; ";return"."+n+" {"+t+r+i+o+u+a+s+"}"}function e(n){for(var e=document.createElement("style"),t=0,r=n.length;r>t;t++)e.appendChild(document.createTextNode(n[t]));document.head.appendChild(e)}function t(t,o){t.forEach(function(t){t.class&&t.fontSetting&&e([n(t.class,t.fontSetting)]),t.fontSetting.font.type&&("custom"===t.fontSetting.font.type&&t.fontSetting.font.family&&t.fontSetting.font.url?r(t.fontSetting.font.family,t.fontSetting.font.url,o):"google"===t.fontSetting.font.type&&t.fontSetting.font.family&&i(t.fontSetting.font.family,o))})}function r(n,e,t){var r=null,i="font-family: "+n+"; src: url('"+e+"');";t=t||document,r=t.styleSheets[0],null!==r&&r.addRule("@font-face",i)}function i(n,e){var t=document.createElement("link");e=e||document,t.setAttribute("rel","stylesheet"),t.setAttribute("type","text/css"),t.setAttribute("href","https://fonts.googleapis.com/css?family="+n),null!==t&&e.getElementsByTagName("head")[0].appendChild(t)}function o(n){for(var e=n.length,t=[],r=0;e>r;r++)t[r]=new Image,t[r].src=n[r]}function u(n){for(var e,t=window.location.search.substring(1),r=t.split("&"),i=0;i<r.length;i++)if(e=r[i].split("="),e[0]==n)return decodeURIComponent(e[1]);return""}return{getQueryParameter:u,getFontCssStyle:n,addCSSRules:e,loadFonts:t,loadCustomFont:r,loadGoogleFont:i,preloadImages:o}}(),"undefined"!=typeof angular&&angular.module("risevision.common.i18n.config",[]).constant("LOCALES_PREFIX","locales/translation_").constant("LOCALES_SUFIX",".json"),"undefined"==typeof config)var config={STORAGE_ENV:"prod"};var RiseVision=RiseVision||{};RiseVision.ImageFolder={},RiseVision.ImageFolder=function(n){"use strict";function e(){d.width=h.getInt("rsW"),d.height=h.getInt("rsH"),m=new RiseVision.ImageFolder.Message,m.show("Please wait while your image is downloaded."),p=new RiseVision.ImageFolder.Storage(d),p.init(),a()}function t(n,t){Array.isArray(n)&&n.length>0&&"additionalParams"===n[0]&&Array.isArray(t)&&t.length>0&&(d=JSON.parse(t[0]),document.getElementById("container").style.height=h.getInt("rsH")+"px",document.getElementById("messageContainer").style.height=h.getInt("rsH")+"px",e())}function r(n){null===g&&(g=new RiseVision.ImageFolder.Slider(d),g.init(n))}function i(n){m.hide(),null!==g&&g.refresh(n)}function o(){m.hide(),v||g.play()}function u(n){"empty"===n?m.show("The selected folder does not contain any images."):"noexist"===n&&m.show("The selected folder does not exist.")}function a(){n.rpc.call("","rsevent_ready",null,h.getString("id"),!0,!0,!0,!0,!0)}function s(){n.rpc.call("","rsevent_done",null,h.getString("id"))}function l(){v=!1,g&&g.isReady()&&g.play()}function c(){v=!0,g&&g.isReady()&&g.pause()}function f(){c()}var d,p=null,g=null,m=null,h=new n.Prefs,v=!0;return{ready:a,done:s,play:l,pause:c,stop:f,setParams:t,initSlider:r,refreshSlider:i,sliderReady:o,noFiles:u}}(gadgets);var RiseVision=RiseVision||{};RiseVision.ImageFolder=RiseVision.ImageFolder||{},RiseVision.ImageFolder.Slider=function(n){"use strict";function e(){var e=document.querySelector(".tp-banner ul"),t=document.createDocumentFragment(),r=[],i=null,o=null,u="";f=p.length,p.forEach(function(e){switch(i=document.createElement("li"),o=document.createElement("img"),i.setAttribute("data-transition","fade"),i.setAttribute("data-masterspeed",500),i.setAttribute("data-delay",1e3*n.duration),o.src=e.url,n.position){case"top-left":u="left top";break;case"top-center":u="center top";break;case"top-right":u="right top";break;case"middle-left":u="left center";break;case"middle-center":u="center center";break;case"middle-right":u="right center";break;case"bottom-left":u="left bottom";break;case"bottom-center":u="center bottom";break;case"bottom-right":u="right bottom";break;default:u="left top"}o.setAttribute("data-bgposition",u),n.scaleToFit?o.setAttribute("data-bgfit","contain"):o.setAttribute("data-bgfit","normal"),i.appendChild(o),r.push(i)}),r.forEach(function(n){t.appendChild(n)}),e.appendChild(t)}function t(n){w?d.revpause():v&&(v=!1,d.revpause(),RiseVision.ImageFolder.done(),y&&(d&&(r(),u(g)),y=!1)),n.slideIndex===f&&(v=!0)}function r(){$("body").off("touchend"),d.off("revolution.slide.onloaded"),d.off("revolution.slide.onchange"),d.revkill(),d=null}function i(){w=!0,clearTimeout(h),h=setTimeout(function(){w=!1,d.revnext(),d.revresume()},1e3*n.pause),o()}function o(){n.autoHide&&(clearTimeout(m),m=setTimeout(function(){$(".tp-leftarrow, .tp-rightarrow").addClass("hidearrows")},R))}function u(r){var u=document.querySelector(".tp-banner-container"),a=document.createDocumentFragment(),s=document.createElement("div"),l=document.createElement("ul");s.setAttribute("class","tp-banner"),s.appendChild(l),a.appendChild(s),u.appendChild(a),p=_.clone(r),e(),d=$(".tp-banner").revolution({hideThumbs:0,hideTimerBar:"on",navigationType:"none",onHoverStop:"off",startwidth:n.width,startheight:n.height}),d.on("revolution.slide.onloaded",function(){b&&(d.revpause(),b=!1,RiseVision.ImageFolder.sliderReady())}),d.on("revolution.slide.onchange",function(n,e){t(e)}),$("body").on("touchend",".tp-banner",function(){i(),$(".tp-leftarrow, .tp-rightarrow").removeClass("hidearrows")}),$("body").on("touchend",".tp-leftarrow, .tp-rightarrow",function(){i()}),o()}function a(){return!b}function s(){d&&d.revresume()}function l(){d&&d.revpause()}function c(n){RiseVision.Common.Utilities.preloadImages(n),g=_.clone(n),y=!0}var f=0,d=null,p=null,g=null,m=null,h=null,v=!1,y=!1,b=!0,w=!1,R=3e3;return{init:u,isReady:a,play:s,pause:l,refresh:c}};var RiseVision=RiseVision||{};RiseVision.ImageFolder=RiseVision.ImageFolder||{},RiseVision.ImageFolder.Message=function(){"use strict";function n(){var n=document.getElementById("messageContainer");if(t){for(;n.firstChild;)n.removeChild(n.firstChild);n.style.display="none",document.getElementById("container").style.visibility="visible",t=!1}}function e(n){var e,r=document.getElementById("messageContainer"),i=document.createDocumentFragment();t?(e=r.querySelector(".message"),e.innerHTML=n):(document.getElementById("container").style.visibility="hidden",r.style.display="block",e=document.createElement("p"),e.innerHTML=n,e.setAttribute("class","message"),e.style.lineHeight=r.style.height,i.appendChild(e),r.appendChild(i),t=!0)}var t=!1;return{hide:n,show:e}};var RiseVision=RiseVision||{};RiseVision.ImageFolder=RiseVision.ImageFolder||{},RiseVision.ImageFolder.Storage=function(n){"use strict";function e(){RiseVision.ImageFolder.noFiles("empty")}function t(){RiseVision.ImageFolder.noFiles("noexist")}function r(){var r=document.querySelector("rise-storage");r.addEventListener("rise-storage-response",i),r.addEventListener("rise-storage-empty-folder",e),r.addEventListener("rise-storage-no-folder",t),r.setAttribute("companyId",n.storage.companyId),r.setAttribute("folder",n.storage.folder),r.setAttribute("env",config.STORAGE_ENV),r.go()}function i(n){o(n),u?a.length>1?(u=!1,clearTimeout(s),RiseVision.ImageFolder.initSlider(a)):s=setTimeout(function(){u=!1,RiseVision.ImageFolder.initSlider(a)},5e3):RiseVision.ImageFolder.refreshSlider(a)}function o(n){var e;n.detail&&(n.detail.hasOwnProperty("added")&&n.detail.added?a.push({name:n.detail.name,url:n.detail.url}):n.detail.hasOwnProperty("changed")&&n.detail.changed?(e=_.find(a,function(e){return e.name===n.detail.name}),e.url=n.detail.url):n.detail.hasOwnProperty("deleted")&&n.detail.deleted&&(a=_.reject(a,function(e){return e.name===n.detail.name}))),a=_.sortBy(a,function(n){return n.name.toLowerCase()})}var u=!0,a=[],s=null;return{init:r}},function(n,e,t){"use strict";function r(){RiseVision.ImageFolder.play()}function i(){RiseVision.ImageFolder.pause()}function o(){RiseVision.ImageFolder.stop()}var u=(new t.Prefs).getString("id");n.oncontextmenu=function(){return!1},e.body.onmousedown=function(){return!1},$(e).ready(function(){t.rpc.register("rscmd_play_"+u,r),t.rpc.register("rscmd_pause_"+u,i),t.rpc.register("rscmd_stop_"+u,o),n.addEventListener("WebComponentsReady",function(){t.rpc.register("rsparam_set_"+u,RiseVision.ImageFolder.setParams),t.rpc.call("","rsparam_get",null,u,["additionalParams"])})})}(window,document,gadgets);var _gaq=_gaq||[];_gaq.push(["_setAccount","UA-57092159-5"]),_gaq.push(["_trackPageview"]),function(){var n=document.createElement("script");n.type="text/javascript",n.async=!0,n.src=("https:"==document.location.protocol?"https://ssl":"http://www")+".google-analytics.com/ga.js";var e=document.getElementsByTagName("script")[0];e.parentNode.insertBefore(n,e)}();
//# sourceMappingURL=data:application/json;base64,